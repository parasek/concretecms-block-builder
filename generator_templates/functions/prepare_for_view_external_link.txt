    private function prepareForViewExternalLink($type, $fields) {

        $keys = array_keys($fields);
        $linkFieldName      = $keys[0];
        $protocolFieldName  = $keys[1];
        $endingFieldName    = $keys[2];
        $textFieldName      = $keys[3];
        $titleFieldName     = $keys[4];
        $newWindowFieldName = $keys[5];

        $link      = $fields[$linkFieldName];
        $protocol  = $fields[$protocolFieldName];
        $ending    = $fields[$endingFieldName];
        $text      = $fields[$textFieldName];
        $title     = $fields[$titleFieldName];
        $newWindow = !empty($fields[$newWindowFieldName]) ? 'target="_blank" rel="noopener"' : '';

        if ($type == 'view') {

            // Fields from database
            $this->set($linkFieldName, $link);
            $this->set($protocolFieldName, $protocol);
            $this->set($endingFieldName, $ending);
            $this->set($textFieldName, $text);
            $this->set($titleFieldName, $title);
            $this->set($newWindowFieldName, $newWindow);

            // Additional data
            if (!empty($link) AND in_array($protocol, ['http://', 'https://'])) {
                $link = $protocol.$link;
            }
            if (!empty($link) AND $protocol=='BASE_URL') {
                $separator = '';
                if (substr($link, 0, 1)!='/') {
                    $separator = '/';
                }
                $link = BASE_URL.$separator.$link;
            }
            if (!empty($link) AND $protocol=='CURRENT_PAGE') {
                $separator = '';
                if (substr($link, 0, 1)!='/') {
                    $separator = '/';
                }
                $link = Page::getCurrentPage()->getCollectionLink().$separator.$link;
            }
            $this->set($linkFieldName.'_link', $link);
            $this->set($linkFieldName.'_link_type', 'external_link');

        } elseif ($type == 'entry') {

            $entry = [];

            // Fields from database
            $entry[$linkFieldName]      = $link;
            $entry[$protocolFieldName]  = $protocol;
            $entry[$endingFieldName]    = $ending;
            $entry[$textFieldName]      = $text;
            $entry[$titleFieldName]     = $title;
            $entry[$newWindowFieldName] = $newWindow;

            // Additional data
            if (!empty($link) AND in_array($protocol, ['http://', 'https://'])) {
                $link = $protocol.$link;
            }
            if (!empty($link) AND $protocol=='BASE_URL') {
                $separator = '';
                if (substr($link, 0, 1)!='/') {
                    $separator = '/';
                }
                $link = BASE_URL.$separator.$link;
            }
            if (!empty($link) AND $protocol=='CURRENT_PAGE') {
                $separator = '';
                if (substr($link, 0, 1)!='/') {
                    $separator = '/';
                }
                $link = Page::getCurrentPage()->getCollectionLink().$separator.$link;
            }
            $entry[$linkFieldName.'_link']      = $link;
            $entry[$linkFieldName.'_link_type'] = 'external_link';

            return $entry;

        }

    }

